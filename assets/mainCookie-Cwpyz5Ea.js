import{a as _,b as f,_ as x}from"./logo-DjTPlJdG.js";import{_ as N,r as i,c as T,a as t,b as c,w as a,o as k,d as m,e as p,f as d,n as v,t as D}from"./index-CVIp7yXs.js";const S={name:"App",data(){return{newTask:"",tasks:[],columns:[{title:"",key:"checkbox",width:"10%"},{title:"Task",dataIndex:"taskName",width:"70%"},{title:"",key:"delete",width:"20%",sorter:(e,o)=>e.done-o.done}]}},methods:{onCreateNewTask(){if(!this.newTask.trim()){_.error("Task cannot be empty!");return}const e={id:new Date().getTime(),taskName:this.newTask,done:!1};this.tasks=[e,...this.tasks],this.saveTasks(),this.newTask="",_.success("Task added successfully!")},onDeleteTask(e){this.tasks=this.tasks.filter(o=>o.id!==e),this.saveTasks(),_.success("Task deleted successfully!")},onTaskChange(){this.saveTasks()},saveTasks(){const e=JSON.stringify(this.tasks);f.set("tasks",e,{expires:365})},loadTasks(){const e=f.get("tasks");e&&(this.tasks=JSON.parse(e))},setRowClassName(e){return e.done?"tableDone":"tableNotDone"}},created(){this.loadTasks()}},z={class:"flex-container"},B={class:"flex-item"},R=t("img",{alt:"logo",class:"logo",src:x,width:"125",height:"125"},null,-1),V=t("div",{class:"flex-container-small"},[t("h1",null,"Todo List (Cookie mode) ‧₊˚ 🍪 ⋅ ☆ "),t("p",null,"Please note that the tasks will be saved in your browser cookies and will be deleted if you clear or eat your cookies. (๑ᵔ⤙ᵔ๑) ")],-1),E={class:"flex-item"},P={class:"flex-item taskTable"};function U(e,o,J,O,r,n){const h=i("a-space"),w=i("a-textarea"),u=i("a-button"),b=i("a-checkbox"),y=i("a-table");return k(),T("div",z,[t("div",B,[c(h,{align:"baseline",size:10},{default:a(()=>[R,V]),_:1})]),t("div",E,[c(h,{align:"center"},{default:a(()=>[c(w,{"auto-size":{minRows:1,maxRows:4},class:"inputTask",value:r.newTask,"onUpdate:value":o[0]||(o[0]=l=>r.newTask=l),placeholder:"What's on your mind?...",onPressEnter:n.onCreateNewTask},null,8,["value","onPressEnter"]),c(u,{type:"primary",onClick:n.onCreateNewTask},{default:a(()=>[m(" Create new task ")]),_:1},8,["onClick"])]),_:1})]),t("div",P,[c(h,{align:"center"},{default:a(()=>[c(y,{dataSource:r.tasks,columns:r.columns,scroll:{x:576,y:900},pagination:{pageSize:5},rowClassName:n.setRowClassName},{bodyCell:a(({column:l,index:C,record:s})=>[l.key==="checkbox"?(k(),p(b,{key:0,checked:s.done,"onUpdate:checked":g=>s.done=g,onChange:n.onTaskChange},null,8,["checked","onUpdate:checked","onChange"])):d("",!0),l.key==="index"?(k(),T("span",{key:1,class:v({"line-through":s.done})},D(C+1),3)):d("",!0),l.key==="delete"&&s.done===!1?(k(),p(u,{key:2,block:"",onClick:()=>n.onDeleteTask(s.id),style:{"background-color":"#000",color:"white",border:"none"}},{default:a(()=>[m(" Delete? ")]),_:2},1032,["onClick"])):d("",!0),l.key==="delete"&&s.done===!0?(k(),p(u,{key:3,block:"",onClick:()=>n.onDeleteTask(s.id),style:{"background-color":"#ff5052",color:"white",border:"none"}},{default:a(()=>[m(" Delete ")]),_:2},1032,["onClick"])):d("",!0)]),_:1},8,["dataSource","columns","rowClassName"])]),_:1})])])}const L=N(S,[["render",U]]);export{L as default};
